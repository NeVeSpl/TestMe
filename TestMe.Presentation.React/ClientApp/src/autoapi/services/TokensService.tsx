// This file was autogenerated by http://frhagn.github.io/Typewriter/


//eslint-disable-next-line
import { ApiBaseService, IUseRequest, IUseRequestWithResult, useRequest, useRequestWithResult, CursorPagedResults, CursorPagination, OffsetPagedResults, OffsetPagination } from "../base/index";
//eslint-disable-next-line 
 import { TokenDTO } from "../dtos/TestMe.Presentation.API.Controllers.Tokens.Output.TokenDTO";
//eslint-disable-next-line 
 import { LoginCredentialsDTO } from "../dtos/TestMe.Presentation.API.Controllers.Tokens.Input.LoginCredentialsDTO";
export * from "../dtos/TestMe.Presentation.API.Controllers.Tokens.Output.TokenDTO";
export * from "../dtos/TestMe.Presentation.API.Controllers.Tokens.Input.LoginCredentialsDTO";
export * from "../base/index";

export class TokensService extends ApiBaseService
{
    static Type = "TokensService";

    createToken(loginCredentials: LoginCredentialsDTO) : Promise<TokenDTO>
    {
        return this.MakeRequestWithResult<TokenDTO>("post", `Tokens`, loginCredentials);
    }
    createTokenAsync(loginCredentials: LoginCredentialsDTO) : Promise<TokenDTO>
    {
        return this.MakeRequestWithResult<TokenDTO>("post", `Tokens/Async`, loginCredentials);
    }
           
}

export function useAPICreateToken(loginCredentials: LoginCredentialsDTO, deps?: ReadonlyArray<unknown>) : IUseRequestWithResult<TokenDTO>
{
    return useRequestWithResult<TokenDTO>("post", `Tokens`, loginCredentials, new TokenDTO(),  deps);
}
export function useAPICreateTokenAsync(loginCredentials: LoginCredentialsDTO, deps?: ReadonlyArray<unknown>) : IUseRequestWithResult<TokenDTO>
{
    return useRequestWithResult<TokenDTO>("post", `Tokens/Async`, loginCredentials, new TokenDTO(),  deps);
}

